upstream backend {
    server 0.0.0.1;   # just an invalid address as a place holder

    balancer_by_lua_block {
        local balancer = require "ngx.balancer"

        -- # well, usually we calculate the peers host and port
        -- # according to some balancing policies instead of using
        -- # hard-coded values like below

        local host = ngx.var.proxy_upstream_host
        local port = ngx.var.proxy_upstream_port

        local ok, err = balancer.set_current_peer(host, port)
        if not ok then
            ngx.log(ngx.ERR, "failed to set the current peer: ", err)
            return ngx.exit(500)
        end
    }

    keepalive 10;  # connection pool
}


# Default php or varnish listening on unix socket on the same node

upstream php {
  server localhost:9000; # weight=9 this is a host name set by docker in dev or k8s service object
  #server unix:/var/run/varnish/varnish.sock weight=9;
  #server 127.0.0.1:8000 backup; # fallback varnish running on tcp should never happen
  keepalive 64;
}

upstream backend_old {
server 0.0.0.1:1000 max_fails=3 fail_timeout=5s;

  balancer_by_lua_block {
  local balancer = require "ngx.balancer"
  local host = ngx.var.proxy_upstream_host
  local port = ngx.var.proxy_upstream_port
  local ok, err = balancer.set_current_peer(host, port)
  if not ok then
  ngx.log(ngx.ERR, "balancer.set_current_peer failed to set the host " .. host .. ":" .. port .. " current peer: ", err)
  return ngx.exit(500)
  end
  }

#keepalive 512;
keepalive 10; # connection pool
}  
